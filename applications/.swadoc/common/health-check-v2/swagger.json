{
  "$schema": "../../../node_modules/@wraithlight/tools.schema/dist/swagger.schema.json",
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger HC - OpenAPI 3.0",
    "description": "Swagger file for wraithlight's healthcheck controller V2.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://local.auth.wraithlight.ai:4500",
      "description": "local"
    },
    {
      "url": "http://dev.auth.wraithlight.ai:5500",
      "description": "dev"
    },
    {
      "url": "http://test.auth.wraithlight.ai",
      "description": "test"
    },
    {
      "url": "http://staging.auth.wraithlight.ai",
      "description": "staging"
    },
    {
      "url": "http://auth.wraithlight.ai",
      "description": "prod"
    }
  ],
  "tags": [
    {
      "name": "common/healthcheck",
      "description": "Endpoints that are related to external (other microservices) operations. Modifies the user resource."
    }
  ],
  "paths": {
    "/api/v1/health-check/metrics": {
      "get": {
        "operationId": "getHealthCheckMetrics",
        "summary": "Endpoint that return the current metrics.",
        "tags": [
          "common/healthcheck"
        ],
        "parameters": [
          {
            "name": "X-WL-API-TOKEN",
            "in": "header",
            "required": true,
            "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": ""
                        }
                      }
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "numberOfErrorMessages": {
                          "type": "number",
                          "example": 0
                        },
                        "numberOfWarningMessages": {
                          "type": "number",
                          "example": 0
                        },
                        "numberOfInformationMessages": {
                          "type": "number",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health-check/health": {
      "get": {
        "operationId": "getHealthCheckHealt",
        "summary": "Endpoint that returns the current status of the API.",
        "tags": [
          "common/healthcheck"
        ],
        "parameters": [
          {
            "name": "X-WL-API-TOKEN",
            "in": "header",
            "required": true,
            "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlationId": {
                      "type": "string",
                      "format": "uuid",
                      "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3"
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        }
                      }
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "appName": {
                          "type": "string",
                          "example": "@wraithlight-poc/node.evo"
                        },
                        "appVersion": {
                          "type": "string",
                          "example": "1.0.0"
                        },
                        "uptime": {
                          "type": "number",
                          "example": 178.156131541
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error400"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error401"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error500"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "error400": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "format": "uuid",
            "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3"
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "E_USER_NOT_FOUND"
              }
            }
          },
          "payload": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "error401": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "format": "uuid",
            "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3"
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "E_USER_NOT_FOUND"
              }
            }
          },
          "payload": {
            "type": "object",
            "properties": {}
          }
        }
      },
      "error500": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "format": "uuid",
            "example": "bb3a7a80-44ec-4b74-9b7b-c8cd58f777b3"
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "E_USER_NOT_FOUND"
              }
            }
          },
          "payload": {
            "type": "object",
            "properties": {}
          }
        }
      }
    }
  }
}
